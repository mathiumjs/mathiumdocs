{"remainingRequest":"/Users/filippofonseca/Desktop/Developer/mathium-framework/site/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/filippofonseca/Desktop/Developer/mathium-framework/site/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/filippofonseca/Desktop/Developer/mathium-framework/site/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/filippofonseca/Desktop/Developer/mathium-framework/site/docs/data.md","dependencies":[{"path":"/Users/filippofonseca/Desktop/Developer/mathium-framework/site/docs/data.md","mtime":1597978102139},{"path":"/Users/filippofonseca/Desktop/Developer/mathium-framework/site/.docusaurus/docusaurus-plugin-content-docs/site-docs-data-md-761.json","mtime":1597979020877},{"path":"/Users/filippofonseca/Desktop/Developer/mathium-framework/site/node_modules/cache-loader/dist/cjs.js","mtime":1597806908257},{"path":"/Users/filippofonseca/Desktop/Developer/mathium-framework/site/node_modules/babel-loader/lib/index.js","mtime":1597806908146},{"path":"/Users/filippofonseca/Desktop/Developer/mathium-framework/site/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1597806918206},{"path":"/Users/filippofonseca/Desktop/Developer/mathium-framework/site/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1597806917129}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}