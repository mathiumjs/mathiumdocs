{"remainingRequest":"/Users/filippofonseca/Desktop/Developer/mathium-framework/site/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/filippofonseca/Desktop/Developer/mathium-framework/site/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/filippofonseca/Desktop/Developer/mathium-framework/site/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/filippofonseca/Desktop/Developer/mathium-framework/site/docs/perfectsquareformula.md","dependencies":[{"path":"/Users/filippofonseca/Desktop/Developer/mathium-framework/site/docs/perfectsquareformula.md","mtime":1597977533573},{"path":"/Users/filippofonseca/Desktop/Developer/mathium-framework/site/.docusaurus/docusaurus-plugin-content-docs/site-docs-perfectsquareformula-md-6e3.json","mtime":1597979020877},{"path":"/Users/filippofonseca/Desktop/Developer/mathium-framework/site/node_modules/cache-loader/dist/cjs.js","mtime":1597806908257},{"path":"/Users/filippofonseca/Desktop/Developer/mathium-framework/site/node_modules/babel-loader/lib/index.js","mtime":1597806908146},{"path":"/Users/filippofonseca/Desktop/Developer/mathium-framework/site/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1597806918206},{"path":"/Users/filippofonseca/Desktop/Developer/mathium-framework/site/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1597806917129}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2ZpbGlwcG9mb25zZWNhL0Rlc2t0b3AvRGV2ZWxvcGVyL21hdGhpdW0tZnJhbWV3b3JrL3NpdGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXtpZDoncGVyZnNxdWFyZScsdGl0bGU6J/Cfj6AgIFBlcmZlY3QgU3F1YXJlIEZvcm11bGEnLHNpZGViYXJfbGFiZWw6J/Cfj6AgIFBlcmZlY3QgU3F1YXJlIEZvcm11bGEnfTtleHBvcnQgY29uc3QgbWV0YWRhdGE9eyJ1bnZlcnNpb25lZElkIjoicGVyZnNxdWFyZSIsImlkIjoicGVyZnNxdWFyZSIsImlzRG9jc0hvbWVQYWdlIjpmYWxzZSwidGl0bGUiOiLwn4+gICBQZXJmZWN0IFNxdWFyZSBGb3JtdWxhIiwiZGVzY3JpcHRpb24iOiJwZXJmZWN0U3F1YXJlKHRlcm0xLCBvcGVyYXRpb24sIHRlcm0yKSIsInNvdXJjZSI6IkBzaXRlL2RvY3MvcGVyZmVjdHNxdWFyZWZvcm11bGEubWQiLCJwZXJtYWxpbmsiOiIvZG9jcy9wZXJmc3F1YXJlIiwiZWRpdFVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9maWxpcHBvLWZvbnNlY2EvbWF0aGl1bWpzL2RvY3MvcGVyZmVjdHNxdWFyZWZvcm11bGEubWQiLCJzaWRlYmFyX2xhYmVsIjoi8J+PoCAgUGVyZmVjdCBTcXVhcmUgRm9ybXVsYSIsInNpZGViYXIiOiJzb21lU2lkZWJhciIsInByZXZpb3VzIjp7InRpdGxlIjoi8J+apiAgR2V0dGluZyBTdGFydGVkIiwicGVybWFsaW5rIjoiL2RvY3MvZ2V0dGluZy1zdGFydGVkIn0sIm5leHQiOnsidGl0bGUiOiLwn4+iICBEaWZmZXJlbmNlIG9mIFNxdWFyZXMiLCJwZXJtYWxpbmsiOiIvZG9jcy9kaWZmb2ZzcXVhcmVzIn19Oy8qIEBqc3ggbWR4ICovZXhwb3J0IGNvbnN0IHJpZ2h0VG9jPVt7dmFsdWU6Jzxjb2RlPnBlcmZlY3RTcXVhcmUodGVybTEsIG9wZXJhdGlvbiwgdGVybTIpPC9jb2RlPicsaWQ6J3BlcmZlY3RzcXVhcmV0ZXJtMS1vcGVyYXRpb24tdGVybTInLGNoaWxkcmVuOltdfSx7dmFsdWU6J0NvbmNlcHQnLGlkOidjb25jZXB0JyxjaGlsZHJlbjpbXX0se3ZhbHVlOidFeGFtcGxlIDE6ICgyeCArIDgpXjInLGlkOidleGFtcGxlLTEtMngtLTgyJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidFeGFtcGxlIDI6ICg3ICsgOSleMicsaWQ6J2V4YW1wbGUtMi03LS05MicsY2hpbGRyZW46W119LHt2YWx1ZTonRXhhbXBsZSAzOiAoOTh4ICsgNTR5KV4yJyxpZDonZXhhbXBsZS0zLTk4eC0tNTR5MicsY2hpbGRyZW46W119XTtjb25zdCBsYXlvdXRQcm9wcz17cmlnaHRUb2N9O2NvbnN0IE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7Y29tcG9uZW50cywuLi5wcm9wc30pe3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDIiLHsiaWQiOiJwZXJmZWN0c3F1YXJldGVybTEtb3BlcmF0aW9uLXRlcm0yIn0sbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiaDIifSxgcGVyZmVjdFNxdWFyZSh0ZXJtMSwgb3BlcmF0aW9uLCB0ZXJtMilgKSksbWR4KCJwIixudWxsLGBJbiBvcmRlciB0byBpbXBsZW1lbnQgdGhlIHBlcmZlY3Qgc3F1YXJlIGZvcm11bGEgaW4gb3VyIGNvZGUgd2l0aCBNYXRoaXVtLCB3ZSBtdXN0IGNhbGwgdGhlIGZ1bmN0aW9uIHVzaW5nIE1hdGhpdW0ncyBBUEksIGFzIHN1Y2g6YCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS10cyJ9KSxgaW1wb3J0ICogYXMgTWF0aGl1bSBmcm9tICJtYXRoaXVtanMiOwoKbGV0IGZvcm11bGEgPSBNYXRoaXVtLnBlcmZlY3RTcXVhcmUodGVybTEsIG9wZXJhdGlvbiwgdGVybTIpOwpgKSksbWR4KCJwIixudWxsLGBOT1RFOiBUaGUgbmFtZSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgTWF0aGl1bWApLGAgYWZ0ZXIgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYCogYXNgKSxgIGlzIGFyYml0cmFyeTsgaXQgY2FuIGJlIHJlcGxhY2VkIHdpdGggd2hhdGV2ZXIgeW91J2QgbGlrZTpgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXRzIn0pLGBpbXBvcnQgKiBhcyBmb28gZnJvbSAibWF0aGl1bWpzIjsKCmxldCBmb3JtdWxhID0gZm9vLnBlcmZlY3RTcXVhcmUodGVybTEsIG9wZXJhdGlvbiwgdGVybTIpOwpgKSksbWR4KCJoMiIseyJpZCI6ImNvbmNlcHQifSxgQ29uY2VwdGApLG1keCgicCIsbnVsbCxgV2hlbiBhbnkgcG9seW5vbWlhbCBpcyBtdWx0aXBsaWVkIGJ5IGl0c2VsZiwgdGhlbiBpdCBpcyBhIHBlcmZlY3Qgc3F1YXJlLmApLG1keCgicCIsbnVsbCxgVG8gZXhwYW5kIGFueSBwb2x5bm9taWFsLCB3ZSBjYW4gYXBwbHkgb25lIG9mIHRoZSBmb2xsb3dpbmcgcGF0dGVybnM6YCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0se30pLGAoYSArIGIpXjIgPSBhXjIgKyAyYWIgKyBiXjIKCihhIC0gYileMiA9IGFeMiAtIDJhYiAtIGJeMgpgKSksbWR4KCJwIixudWxsLGBOT1RFOiBJbiB0aGVzZSBwYXR0ZXJucywgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYGFgKSxgIGFuZC9vciBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgYmApLGAgY2FuIGJlIHJlcGxhY2VkIGJ5IGFueSB0eXBlIG9mIGFsZ2VicmFpYyBleHByZXNzaW9uLmApLG1keCgicCIsbnVsbCxgRm9yIGV4YW1wbGUsIGlmIHdlIHdhbnQgdG8gZXhwYW5kIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGAoOHggKyA3eCleMmApLGAsIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBhID0gOHhgKSxgIGFuZCBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgYiA9IDd4YCksYC4gVGhlcmVmb3JlLi4uYCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0se30pLGAoOHggKyA3eCleMiA9ICg4eCleMiArIDIoOHgpKDd4KSArICg3eCleMgpgKSksbWR4KCJwIixudWxsLGBJbiBvdXIgTWF0aGl1bSBjb2RlLCBpdCdzIGltcG9ydGFudCB0byBub3RlIHRoZSBmb2xsb3dpbmc6YCksbWR4KCJ0YWJsZSIsbnVsbCxtZHgoInRoZWFkIix7cGFyZW50TmFtZToidGFibGUifSxtZHgoInRyIix7cGFyZW50TmFtZToidGhlYWQifSxtZHgoInRoIixfZXh0ZW5kcyh7cGFyZW50TmFtZToidHIifSx7ImFsaWduIjpudWxsfSksYEluLUVxdWF0aW9uYCksbWR4KCJ0aCIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6bnVsbH0pLGBJbi1Db2RlYCkpKSxtZHgoInRib2R5Iix7cGFyZW50TmFtZToidGFibGUifSxtZHgoInRyIix7cGFyZW50TmFtZToidGJvZHkifSxtZHgoInRkIixfZXh0ZW5kcyh7cGFyZW50TmFtZToidHIifSx7ImFsaWduIjpudWxsfSksYGFgKSxtZHgoInRkIixfZXh0ZW5kcyh7cGFyZW50TmFtZToidHIifSx7ImFsaWduIjpudWxsfSksYHRlcm0xYCkpLG1keCgidHIiLHtwYXJlbnROYW1lOiJ0Ym9keSJ9LG1keCgidGQiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJ0ciJ9LHsiYWxpZ24iOm51bGx9KSxgb3BlcmF0aW9uYCksbWR4KCJ0ZCIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6bnVsbH0pLGBvcGVyYXRpb25gKSksbWR4KCJ0ciIse3BhcmVudE5hbWU6InRib2R5In0sbWR4KCJ0ZCIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6bnVsbH0pLGBiYCksbWR4KCJ0ZCIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6bnVsbH0pLGB0ZXJtMmApKSkpLG1keCgiaDIiLHsiaWQiOiJleGFtcGxlLTEtMngtLTgyIn0sYEV4YW1wbGUgMTogKDJ4ICsgOCleMmApLG1keCgicCIsbnVsbCxgU3VwcG9zZSB3ZSBhcmUgZ2l2ZW4gdGhlIGV4cHJlc3Npb24gYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYCgyeCArIDgpXjJgKSxgLmApLG1keCgicCIsbnVsbCxgV2hlbiBhcHBseWluZyB0aGUgUGVyZmVjdCBTcXVhcmUgRm9ybXVsYSwgdGhlIHJlc3VsdCB3b3VsZCBiZSB0aGUgZm9sbG93aW5nOmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHt9KSxgKDJ4ICsgOCleMiA9ICgyeCleMiArIDIoMngpKDgpICsgKDgpXjIKYCkpLG1keCgicCIsbnVsbCxgV2hlbiB1c2VkIGluIG91ciBjb2RlLCB3ZSBjYW4gbWFrZSBpdCBsb29rIGxpa2UgdGhlIGZvbGxvd2luZzpgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXRzIn0pLGBpbXBvcnQgKiBhcyBNYXRoaXVtIGZyb20gIm1hdGhpdW1qcyI7CgpmdW5jdGlvbiBmaW5kUGVyZlNxdWFyZSh0ZXJtMSwgb3BlcmF0aW9uLCB0ZXJtMikgewogIGxldCBmb3JtdWxhID0gTWF0aGl1bS5wZXJmZWN0U3F1YXJlKHRlcm0xLCBvcGVyYXRpb24sIHRlcm0yKTsKICByZXR1cm4gZm9ybXVsYTsKfQoKLy8gVGVzdCB0aGUgZnVuY3Rpb24KY29uc29sZS5sb2coZmluZFBlcmZTcXVhcmUoOCwgIisiLCA5KSk7CmApKSxtZHgoInAiLG51bGwsYENPREUgQU5BTFlTSVM6IEZpcnN0LCB3ZSBhcmUgaW1wb3J0aW5nIHRoZSBNYXRoaXVtIGZyYW1ld29yayBhdCB0aGUgdG9wIG9mIHRoZSBmaWxlLCB0aGUgd2UgYXJlIGRlZmluaW5nIHRoZSBmdW5jdGlvbiBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgZmluZFBlcmZTcXVhcmUoKWApLGAgd2l0aCB0aHJlZSBwYXJhbWV0ZXJzOiBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgdGVybTFgKSxgLCBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgb3BlcmF0aW9uYCksYCwgYW5kIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGB0ZXJtMmApLGAuYCksbWR4KCJwIixudWxsLGBJbnNpZGUgdGhlIGZ1bmN0aW9uLCB3ZSBhcmUgZGVmaW5pbmcgYSB2YXJpYWJsZSBjYWxsZWQgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYGZvcm11bGFgKSxgLCB3aGljaCBzdG9yZXMgdGhlIGFjdHVhbCBNYXRoaXVtIGZ1bmN0aW9uIHRoYXQgd2lsbCBleGVjdXRlIHRoZSBmdW5jdGlvbmFsaXR5IGZvciB1cyAod2l0aCB0aGUgdGhyZWUgcGFyYW1ldGVycykuYCksbWR4KCJwIixudWxsLGBBZnRlciB3ZSBkZWZpbmUgdGhlIHZhcmlhYmxlLCB3ZSBhcmUgcmV0dXJuaW5nIGl0IHdpdGggYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYHJldHVybiBmb3JtdWxhO2ApLGAuYCksbWR4KCJwIixudWxsLGBGaW5hbGx5LCB3ZSBhcmUgdGVzdGluZyB0aGUgZnVuY3Rpb24gYnkgbG9nZ2luZyBpdCB0byB0aGUgY29uc29sZSB3aXRoIGEgcHJlZGV0ZXJtaW5lZCBzZXQgb2YgcGFyYW1ldGVycyB0aGF0IGZpbGwgaW4gZm9yIHRoZSBwbGFjZWhvbGRlcnM6IGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGB0ZXJtMSA9IDhgKSxgLCBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgb3BlcmF0aW9uID0gIisiYCksYCwgYW5kIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGB0ZXJtMiA9IDlgKSxgLmApLG1keCgiaDIiLHsiaWQiOiJleGFtcGxlLTItNy0tOTIifSxgRXhhbXBsZSAyOiAoNyArIDkpXjJgKSxtZHgoInAiLG51bGwsYFN1cHBvc2Ugd2UgYXJlIGdpdmVuIHRoZSBleHByZXNzaW9uIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGAoNyArIDkpXjJgKSxgLmApLG1keCgicCIsbnVsbCxgV2hlbiBhcHBseWluZyB0aGUgUGVyZmVjdCBTcXVhcmUgRm9ybXVsYSwgdGhlIHJlc3VsdCB3b3VsZCBiZSB0aGUgZm9sbG93aW5nOmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHt9KSxgKDcgKyA5KV4yID0gKDcpXjIgKyAyKDcpKDkpICsgKDkpXjIKCj0gNDkgKyAxMjYgKyA4MQoKPSAyNTYKYCkpLG1keCgicCIsbnVsbCxgV2hlbiBhcHBseWluZyBpdCB0byBvdXIgY29kZSwgdGhlIHJlc3VsdCB3b3VsZCBiZSB0aGUgZm9sbG93aW5nOmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtdHMifSksYGltcG9ydCAqIGFzIE1hdGhpdW0gZnJvbSAibWF0aGl1bWpzIjsKCmZ1bmN0aW9uIGZpbmRQZXJmU3F1YXJlKHRlcm0xLCBvcGVyYXRpb24sIHRlcm0yKSB7CiAgbGV0IGZvcm11bGEgPSBNYXRoaXVtLnBlcmZlY3RTcXVhcmUodGVybTEsIG9wZXJhdGlvbiwgdGVybTIpOwogIHJldHVybiBmb3JtdWxhOwp9Ci8vIFRlc3QgdGhlIGZ1bmN0aW9uCmNvbnNvbGUubG9nKGZpbmRQZXJmU3F1YXJlKDcsICIrIiwgOSkpOwpgKSksbWR4KCJoMiIseyJpZCI6ImV4YW1wbGUtMy05OHgtLTU0eTIifSxgRXhhbXBsZSAzOiAoOTh4ICsgNTR5KV4yYCksbWR4KCJwIixudWxsLGBTdXBwb3NlIHdlIGFyZSBnaXZlbiB0aGUgZXhwcmVzc2lvbiBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgKDk4eCArIDU0eSleMmApLGAuYCksbWR4KCJwIixudWxsLGBXaGVuIGFwcGx5aW5nIHRoZSBQZXJmZWN0IFNxdWFyZSBGb3JtdWxhLCB0aGUgcmVzdWx0IGNvdWxkIGJlIHRoZSBmb2xsb3dpbmc6YCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0se30pLGAoOTh4ICsgNTR5KV4yID0gKDk4eCleMiArIDIoOTh4KSg1NHkpICsgKDU0eSleMgpgKSksbWR4KCJwIixudWxsLGBXaXRoIE1hdGhpdW0sIHRoZSBjb2RlIGZvciB0aGlzIHBhcnRpY3VsYXIgZXhlcmNpc2UgY291bGQgYmUgdGhlIGZvbGxvd2luZzpgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXRzIn0pLGBpbXBvcnQgKiBhcyBNYXRoaXVtIGZyb20gIm1hdGhpdW1qcyI7CgpmdW5jdGlvbiBmaW5kUGVyZlNxdWFyZSh0ZXJtMSwgb3BlcmF0aW9uLCB0ZXJtMikgewogIGxldCBmb3JtdWxhID0gTWF0aGl1bS5wZXJmZWN0U3F1YXJlKHRlcm0xLCBvcGVyYXRpb24sIHRlcm0yKTsKICByZXR1cm4gZm9ybXVsYTsKfQovLyBUZXN0IHRoZSBmdW5jdGlvbgpjb25zb2xlLmxvZyhmaW5kUGVyZlNxdWFyZSgiOTh4IiwgIisiLCAiNTR5IikpOwpgKSksbWR4KCJwIixudWxsLGBSRU1FTUJFUjogVGhlc2UgYXJlIGp1c3QgZXhhbXBsZXMuIEZlZWwgZnJlZSB0byB0YWtlIHRoaXMgZnVuY3Rpb24gKGFuZCBhbnkgb3RoZXIgb25lIHRoYXQgd2Ugb2ZmZXIpIGFuZCBjdXN0b21pemUgdGhlbSB0byB5b3VyIGhlYXJ0J3MgZGVzaXJlLmApKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},null]}